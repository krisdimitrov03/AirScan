name: Clean Test Database

on:
  workflow_dispatch:

jobs:
  drop-database:
    # WARNING: This is for dev/test environments only. Use with caution.
    name: "Danger! Drop DB for debugging only."
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASS }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Wait for MySQL to be ready
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
          # Loop until we can successfully connect
          until mysql -h 127.0.0.1 -u root -p${{ secrets.DB_PASS }} -e "SELECT 1"; do
            echo "Waiting for MySQL to be ready..."
            sleep 3
          done

      - name: WARNING Prompt
        run: |
          echo "WARNING: You are about to drop the database ${{ secrets.DB_NAME }}."
          echo "This operation is *destructive* and should only be run in a dev/testing environment."

      - name: Drop database
        run: |
          echo "Dropping database: ${{ secrets.DB_NAME }}..."
          mysql -h 127.0.0.1 -u root -p${{ secrets.DB_PASS }} -e "DROP DATABASE IF EXISTS \`${{ secrets.DB_NAME }}\`;"
          echo "Database dropped."

      - name: Verify database has been dropped
        run: |
          echo "Verifying that ${{ secrets.DB_NAME }} does not exist."
          mysql -h 127.0.0.1 -u root -p${{ secrets.DB_PASS }} -e "SHOW DATABASES;"
          echo "If you see ${{ secrets.DB_NAME }} in the list above, the drop was not successful."
