name: MySQL with Docker Run and Seeding
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Start MySQL container
        run: |
          docker run -d --name mysql -p ${{ secrets.PORT }}:${{ secrets.DB_PORT }} \
            -e MYSQL_DATABASE=${{ secrets.DB_NAME }} \
            -e MYSQL_USER=${{ secrets.DB_USER }} \
            -e MYSQL_PASSWORD=${{ secrets.DB_PASS }} \
            -e MYSQL_ROOT_PASSWORD=${{ secrets.DB_PASS }} \
            mysql:8.0
      - name: Install mysql client
        run: sudo apt-get update && sudo apt-get install -y mysql-client
      - name: Wait for MySQL to be ready
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
        run: |
          for i in {1..30}; do
            if mysql --protocol=tcp -h $DB_HOST -P ${{ secrets.PORT }} -u $DB_USER -p$DB_PASS -e "select 1" >/dev/null 2>&1; then break; fi; sleep 1; done
      - name: Show databases
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
        run: mysql --protocol=tcp -h $DB_HOST -P ${{ secrets.PORT }} -u $DB_USER -p$DB_PASS -e "SHOW DATABASES;"
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Run database seeder
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: node seed/seedDatabase.js
      - name: Show all tables in the database
        env:
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASS: ${{ secrets.DB_PASS }}
        run: mysql --protocol=tcp -h $DB_HOST -P ${{ secrets.PORT }} -u $DB_USER -p$DB_PASS ${{ secrets.DB_NAME }} -e "SHOW TABLES;"

      - name: Show Users table
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
        run: mysql --protocol=tcp -h $DB_HOST -P ${{ secrets.PORT }} -u $DB_USER -p$DB_PASS ${{ secrets.DB_NAME }} -e "SELECT * FROM users LIMIT 3;"
