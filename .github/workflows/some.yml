name: Show Database Tables with Seeding

on:
  push:
  pull_request:

jobs:
  show-tables:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASS }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client

      - name: Wait for MySQL to be ready
        run: |
          until mysql -h 127.0.0.1 -u root -p${{ secrets.DB_PASS }} -e "SELECT 1"; do
            echo "Waiting for MySQL to be ready..."
            sleep 3
          done

      - name: Create test database
        run: |
          mysql -h 127.0.0.1 -u root -p${{ secrets.DB_PASS }} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};"

      - name: Seed the database
        env:
          # These environment variables will be picked up by your models/config if you use process.env
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          echo "Seeding the database..."
          # Option 1: If your seed/seedDatabase.js is set to execute when run directly:
          
          # Option 2: If not, you can execute the exported function inline:
          node -e "require('./seed/seedDatabase')().then(() => { console.log('Seeding complete') }).catch(err => { console.error(err); process.exit(1); })"

      - name: Show Tables in the Database
        run: |
          echo "Tables in database '${{ secrets.DB_NAME }}':"
          mysql -h 127.0.0.1 -u root -p${{ secrets.DB_PASS }} -e "SHOW TABLES;" ${{ secrets.DB_NAME }}
